\ Array Struct:
\   0 : address
\   1 : size

:: ARRAY-ADDR ( array -- addr )
  @
;

: ARRAY-SIZE ( array -- size )
  01h CELLS + @
;

: ARRAY ( size addr -- array )
  HERE @ -ROT
  , , 
;

:: {
  HERE @ >R
  DATA-STACK >R
;

:: }
  01h 
    DATA-STACK R> SWAP - 
  >>
  DUP >R
    [ , ] 
  TIMES
  R> 01h -
  R>
  ARRAY
;

: ARRAY-EACH ( array q -- )
  OVER ARRAY-SIZE
  ROT ARRAY-ADDR -ROT
  [
    2DUP SWAP @ SWAP
    CALL
    ROT 2DUP ! -ROT DROP
    SWAP 01h CELLS + SWAP
  ] TIMES
;
